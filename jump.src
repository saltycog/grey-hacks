// command: jump
NEWLINE = char(10)


// --- JumpBox Class----------------------------------
JumpBox = {}

JumpBox.alias = null
JumpBox.user = null
JumpBox.ip = null
JumpBox.port = -1

JumpBox.New = function(alias)
	jumplist = get_jumplist_file.get_content
	entries = jumplist.split(NEWLINE)
	for entry in entries
		entry_tokens = entry.split("=")
		if entry_tokens.len != 2 then continue
		entry_alias = entry_tokens[0]
		address = entry_tokens[1]
		if entry_alias.lower == alias.lower then
			value_tokens = address.split("@")
			address_tokens = value_tokens[1].split(":")
			
			self = new JumpBox
			self.alias = alias
			self.user = value_tokens[0]
			self.ip = address_tokens[0]
			self.port = address_tokens[1].to_int
			return self
		end if
	end for
	print("<b><color=#FF0000>No such alias:</b> " + alias + "</color>")
	print_usage
	exit
end function

// Jump to jumpbox
JumpBox.jump = function()
	password = user_input("Password: ")
	print("<b>Connecting to:<b> " + self.ip)
	result = get_shell.connect_service(self.ip, self.port, self.user, password, "ssh")
	if typeof(result) == "shell" then
		self.clear_logs(result)
		result.start_terminal
		print
	end if
end function

// Jumpbox setup
JumpBox.sync = function()
	print("IP: " + self.ip)
	print("Port: " + self.port)
end function

// Jumpbox teardown
JumpBox.teardown = function()
	print("IP: " + self.ip)
	print("Port: " + self.port)
end function

JumpBox.clear_logs = function(shell)
	computer = shell.host_computer
	syslog = computer.File("/var/system.log")
	syslog.delete
	computer.touch("home/guest", "system.log")
	syslog = computer.File("/home/guest/system.log")
	syslog.set_content("Your {}'s have been thoroughly salted!")
	syslog.chmod("u-rwx")
	syslog.chmod("g-rwx")
	syslog.chmod("o-rwx")
	syslog.set_owner("root")
	syslog.set_group("root")
	syslog.move("/var", "system.log")
end function


// --- Helpers ---------------------------------------
// Print usage details
print_usage = function()
	print("<b>Usage: jump (-list/-alias/-setup/-teardown) [alias_name]</b>")
	print("Example (ssh using alias): jump jumpbox_alias")
	print("Example (list all aliases): jump -list")
	print("Example (create new alias): jump -alias jumpbox_alias")
	print("Example (setup jumpbox): jump -setup jumpbox_alias")
	print("Example (tear down jumpbox): jump -teardown jumpbox_alias")
end function

// Home home dir of active user
get_user_home = function()
	if active_user == "root" then return "/root"
	return "/home/" + active_user
end function

// Get saved config
get_jumplist_file = function()
	config_dir = get_user_home + "/Config"
	computer = get_shell.host_computer
	jumplist_file = computer.File(config_dir + "/Jumplist.txt")
	if jumplist_file == null then
		computer.touch(config_dir, "Jumplist.txt")
		jumplist_file = computer.File(config_dir + "/Jumplist.txt")
		jumplist_file.chmod("o-rwx")
		jumplist_file.chmod("g-rwx")
		if active_user == "root" then jumplist_file.chmod("u-rwx")
	end if
	return jumplist_file
end function

// Store a new jumpbox address into an alias
create_alias = function(alias)
	jumplist_file = get_jumplist_file
	jumplist = jumplist_file.get_content
	user = user_input("Enter login user: ")
	ip = user_input("Enter jumpbox IP: ")
	port = user_input("Enter jumpbox port: ")
	if jumplist.len == 0 then 
		jumplist = alias + "=" + user + "@" + ip + ":" + port
	else
		jumplist = jumplist + NEWLINE + alias + "=" + user + "@" + ip + ":" + port
	end if
	jumplist_file.set_content jumplist
	exit("<b>New alias added to jumplist:</b> " + alias)
end function


// --- MAIN ------------------------------------------
if params.len == 0 or params[0] == "-h" or params[0] == "--help" then 
	print_usage
	exit
end if

// List aliases
if params[0] == "-list" then 
	jumplist = get_jumplist_file.get_content
	print(jumplist)
	exit
end if

// Create new alias
if params[0] == "-alias" then
	alias = params[1]
	create_alias(alias)
	exit

// Sync files to jump target
else if params[0] == "-sync" then 
	alias = params[1]
	jumpbox = JumpBox.New(alias)
	jumpbox.sync
	exit

// Clean up jump target
else if params[0] == "-teardown" then 
	alias = params[1]
	jumpbox = JumpBox.New(alias)
	jumpbox.teardown
	exit

else
	alias = params[0]
	jumpbox = JumpBox.New(alias)
	jumpbox.jump
	exit
end if